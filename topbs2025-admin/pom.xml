<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>tw.com</groupId>
        <artifactId>topbs2025</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>topbs2025-admin</artifactId>

    <dependencies>


        <!--  Spring Web 項目 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- spring aop-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- 寄送mail-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- Spring Boot 整合校驗框架 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring 熱部屬 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!--  Lombok加速開發 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- MariaDB 驅動 -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>
        
        <!-- mybatis puls-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
        </dependency>
        <!-- mybatis puls generator 代碼生成器 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
        </dependency>
        <!-- freemarker模板引擎（template engine）,用於搭配代碼生成器-->
        <!-- 概念上就像「照樣造句」，一段文字會有幾個地方被挖空，而我們要自己把詞語給填進去。 -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>

        <!-- knife4j 接口API 文檔擴展 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
        </dependency>

        <!-- Sa-Token 权限认证，在线文档：https://sa-token.cc -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-spring-boot3-starter</artifactId>
        </dependency>
        <!-- Sa-Token 权限认证,Redisson客戶端 -->
        <dependency>
            <groupId>cn.dev33</groupId>
            <artifactId>sa-token-redisson-jackson</artifactId>
        </dependency>
        <!-- minio 分布式文件儲存服務 -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
        </dependency>

        <!-- JasperReport依賴 -->
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
        </dependency>

        <!-- JasperReport 字體擴展依賴 -->
        <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports-fonts</artifactId>
        </dependency>

        <!-- VO、BO、DTO與實體類的轉換工具依賴 -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <!-- google 工程師自組件的工具類 -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <!-- 阿里巴巴 EasyExcel 用於將資料庫資料轉成excle給人下載 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
        </dependency>

        <!-- QRcode 產出 zxing 核心模塊 -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
        </dependency>

        <!-- QRcode 產出 zxing Java SE模塊 -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
        </dependency>

        <!-- Jsoup 用來提取HTML字符串的依賴 -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
        </dependency>

        <!-- easy-captcha 驗證碼 -->
        <dependency>
            <groupId>com.github.whvcse</groupId>
            <artifactId>easy-captcha</artifactId>
        </dependency>


        <!-- 使用Spring Data JPA 項目，如果同時使用 Spring Data 系列可能要注意修改配置方法 -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        -->

        <!-- 因應spring Boot 3.4 有人做的knife4j修改 -->
        <!--
        <dependency>
            <groupId>com.github.xingfudeshi</groupId>
            <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
        </dependency>
         -->


        <!-- 配置Redisson 來連結並訪問redis -->
        <!--
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson-spring-boot-starter</artifactId>
        </dependency>
        -->


        <!-- Hibernate JPA元模型產生器 -->
        <!--
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <scope>provided</scope>
        </dependency>
        -->


        <!-- spring boot 配置類處理器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <!-- 打包插件 -->
    <build>
        <plugins>
            <!-- spring Boot maven打包插件 -->
            <!-- 
                作用：這個插件負責打包 Spring Boot 應用成可運行的 JAR 或 WAR 文件。
                配置：<excludes> 中排除了 lombok 依賴，這意味著在打包時不會將 Lombok 依賴包括進去。
            -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- apache maven compliler插件 -->
            <!--
                作用：這個插件負責編譯 Java 源碼。<annotationProcessorPaths> 配置了注解處理器，用於在編譯期間生成代碼。
                source 和 target：這些屬性被註釋掉了，但它們用於設置 Java 的版本。例如，<source>17</source> 和
            <target>17</target> 表示使用 Java 17。
                annotationProcessorPaths：這部分指定了多個注解處理器，包括 Lombok、MapStruct 和 Lombok-MapStruct
            綁定處理器。
                注解處理器配置：在 Maven 編譯階段包含了 Lombok 和 MapStruct
            注解處理器，這允許這些注解在編譯時生成必要的代碼。這也是為什麼您的代碼可以在開發環境和生產環境中正常工作的原因之一。
             -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- <version>3.11.0</version> -->
                <configuration>
                    <source>17</source> <!-- depending on your project 目前使用JDK17 -->
                    <target>17</target>  <!-- depending on your project 目前使用JDK17 -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.5.5.Final</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                        <!--
                        <path>
                            <groupId>org.hibernate.orm</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${jpamodelgen}</version>
                        </path>
                        -->
                        <!-- other annotation processors -->
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>